
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBmTCyAoxWibrZ9tlXX2i3XYWOkfBW6f98&callback=initMap">
</script>
<div class="page-breadcrumb">
	<div class="row">
		<div class="col-5 align-self-center">
			<h4 class="page-title"> Map Pool</h4>
			<div class="d-flex align-items-center">
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb">
						<li class="breadcrumb-item"><a href="<%= pools_url %>">Pools</a></li>
						<li class="breadcrumb-item"><a href="#">Map Pool</a></li>

					</ol>
				</nav>
			</div>
		</div>
	</div>
	<style type="text/css">
      /* Always set the map height explicitly to define the size of the div
      * element that contains the map. */
      #map {
      	height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
      	height: 100%;
      	margin: 0;
      	padding: 0;
      }
  </style>

  <div class="row">
  	<div class="col-12">
  		<div class="card">
  			<div class="card-body" style="    max-height: 42px;
  			">
  			<% unless flash[:notice].blank? %>
  			<div class="flash_team_member">
  				<div id="flash_notice_team_member" class="flash_team_member flash_notice_team_member clearfix hide_for_print">
  					<%= flash[:notice] %><i class="fa fa-check" style="float:right;"></i>
  				</div>
  			</div>
  			<% end %>
  		</div>
  		

  		<div id="map" style="height: 600px;"></div>
  		<div id="status"></div>
  		<div id="info"></div>

  	</div>
  </div>
</div>
</div>

<script>
	var addresses = [<% @leads.each do |i|%> "<%= i.address.address_name.to_s if !i.address.address_name.blank?%>",<% end %>];
	console.dir(addresses)
	var bounds = new google.maps.LatLngBounds();
	var successCnt = 0;
	var failCnt = 0;
	var map;

	function initMap() {
		geocoder = new google.maps.Geocoder();
		var latlng = new google.maps.LatLng(30.51687, 69.40949);
		var myOptions = {
			zoom: 10,
			center: latlng,
			mapTypeControl: true,
			mapTypeControlOptions: {
				style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
			},
			navigationControl: true,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("map"), myOptions);
		if (geocoder) {
			for (var i = 0; i < addresses.length; i++) {
				codeAddress(addresses[i]);
			}
		}
	}
	google.maps.event.addDomListener(window, "load", initMap);

	function codeAddress(address) {
		geocoder.geocode({
			'address': address
		}, function (results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
				if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
					successCnt++;
					map.setCenter(results[0].geometry.location);

					var infowindow = new google.maps.InfoWindow({
						content: '<b>' + address + '</b>',
						size: new google.maps.Size(150, 50)
					});

					var marker = new google.maps.Marker({
						position: results[0].geometry.location,
						map: map,
						title: address
					});
					google.maps.event.addListener(marker, 'click', function () {
						infowindow.open(map, marker);
					});
					bounds.extend(marker.getPosition());
					map.fitBounds(bounds);
					document.getElementById('status').innerHTML = "success: " + successCnt + ", fail:" + failCnt;
				} else {
                // alert("No results found");
                failCnt++;
                document.getElementById('info').innerHTML += address + ":" + status + "<br>";
                document.getElementById('status').innerHTML = "success: " + successCnt + ", fail:" + failCnt;
            }
        } else {
            // alert("Geocode was not successful for the following reason: " + status);
            failCnt++;
            document.getElementById('info').innerHTML += address + ":" + status + "<br>";
            document.getElementById('status').innerHTML = "success: " + successCnt + ", fail:" + failCnt;
        }
    });
	}


</script>